apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: mini-ecommerce
spec:
  accessModes:
    - ReadWriteOnce # The volume can be mounted as read-write by a single node
  resources:
    requests:
      storage: 1Gi # 1Gi of storage

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq-statefulset
  namespace: mini-ecommerce
spec:
  selector:
    matchLabels:
      app: rabbitmq
  serviceName: rabbitmq-service
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.13-alpine
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_PASS
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
          readinessProbe:
            exec:
              command: ["rabbitmqctl", "status"]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: mini-ecommerce
spec:
  selector:
    app: rabbitmq
  ports:
    - protocol: TCP
      port: 5672
      targetPort: 5672
    - protocol: TCP
      port: 15672
      targetPort: 15672